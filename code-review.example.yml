# LLM 配置
LLM:
  BASE_URL: 'your-llm-base-url'
  API_KEY: 'your-llm-api-key'

# 忽略的文件或目录
ignore:
  - 'node_modules'
  - 'dist'
  - '*.log'

# 自定义命令（可选）
# 在代码提交前执行的命令，例如代码检查、格式化等
# 如果命令执行失败，将终止提交流程
customCommands:
  - 'pnpm lint'
  - 'pnpm format'
  # - "其他自定义命令"

# 是否包含 .gitignore 中的忽略规则（默认为 true）
isContainGitignore: true

# 自定义提示词模板配置（可选）
promptTemplate:
  # 主提示词模板
  main: |
    ## 充当角色
    你是一个专业的代码审查助手，你的任务是对暂存区文件的代码进行审查，并给出是否建议提交的结果以及原因，最终只需要告知我最终结果，不要包含任何其他内容
    如果建议提交，则返回此次代码修改很棒，不需要调整，可直接提交。如果不建议提交，则直接给出原因。

    以下是待审查的代码变更：

  # 文件类型特定的提示词模板
  fileTypes:
    'js,ts,jsx,tsx': |
      请特别关注JavaScript/TypeScript的代码质量，包括性能优化、类型安全和最佳实践。
    'css,scss,less': |
      请特别关注CSS的命名规范、选择器嵌套深度和样式复用情况。

  # 代码规范指导
  codeStandards:
    - '变量和函数命名应当清晰表达其用途和含义'
    - '避免过深的嵌套和复杂的条件判断'
    - '确保适当的注释和文档'
    - '避免代码重复，提取共用逻辑'

# 语言/框架特定的审查重点
reviewGuidelines:
  'js,ts,jsx,tsx':
    - '检查是否存在潜在的内存泄漏'
    - '确保异步函数正确处理错误'
    - '检查是否有不必要的渲染或计算'
    - '确保正确使用React Hooks和生命周期'
  'css,scss,less':
    - '检查是否有不必要的重复样式'
    - '确保样式命名符合项目规范'
    - '检查媒体查询是否合理'
    - '检查是否有过度特异性的选择器'
  'py':
    - '检查是否遵循PEP8规范'
    - '确保适当的类型注释'
    - '检查异常处理是否完善'
